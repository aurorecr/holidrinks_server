{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","users/components/UserItem.js","users/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","users/pages/Users.js","shared/components/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","events/pages/NewEvent.js","shared/components/UIElements/Map.js","events/components/EventItem.js","events/components/EventList.js","events/pages/UserEvents.js","events/pages/UpdateEvent.js","users/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","console","log","to","id","process","name","eventCount","UsersList","items","length","map","user","key","events","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewEvent","auth","useContext","title","description","address","inputHandler","history","useHistory","eventSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","EventItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","EventList","lenght","creator","location","onDeleteEvent","UserEvents","loadedEvents","setLoadedEvents","useParams","fetchEvents","deletedEventId","prevEvents","UpdateEvent","loadedEvent","setLoadedEvent","eventId","setFormData","fetchEvent","eventUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.5b252a02.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  \n  const login = useCallback((uid, token, expirationDate) => {\n    //useCallback to avoid infinity loops\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date (new Date().getTime() + 1000 * 60 * 60);\n    //get time gives number of milliseconde , so 1 seconde , 1min , then 1h\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData',JSON.stringify({ userId:uid, token: token, expiration: tokenExpirationDate.toISOString()\n       })\n      );\n    //with JSON.stringify i can turn an object into text, JSON is a text that looks like an object\n  }, []);\n\n  const logout = useCallback(() => {\n    //useCallback to avoid infinity loops\n    setToken(null);\n    setTokenExpirationDate(null);\n    //here i clear the experationDate when the user log out\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate){\n          const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n         logoutTimer = setTimeout(logout, remainingTime);\n            } else {\n              clearTimeout(logoutTimer);\n            }\n         }, [token, logout, tokenExpirationDate]);\n         //when the user log out , it clears the timer, when the user login it set a new timer\n       \n         useEffect(() =>{\n           const storedData= JSON.parse(localStorage.getItem('userData'));\n             if (storedData && \n               storedData.token &&\n               new Date(storedData.expiration) > new Date()\n               ){\n             login(storedData.userId, storedData.token, new Date(storedData.expiration));\n             }\n           }, [login]);\n           return { token, login, logout, userId };\n};\n\n\n   ","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n         {/*  The ${} allow multiline strings or string interpolation. */}\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n//Link > renders an anchor tag and add extra block of navigation on same page\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n    console.log('prop image',props.image)\nreturn(\n\n    <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/events`}>\n                {/* to > define where 'to' wants to go, will reflect the id of the user as it will be the users events creation, it's dynamic, so we use curly braces */}\n                {/* so {props.id} here is the user id */}\n                    <div className=\"user-image\">\n                    <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.eventCount} {props.eventCount === 1 ? 'Holidrink' : 'Holidrinks'}</h3> \n                        {/* will write down event in plurial if user created several events */}\n                    </div>\n              </Link> \n            </Card>\n    </li>\n)\n    \n};\n\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\n\nconst UsersList = props => {\n if (props.items.length === 0){\n     return (\n         <div className=\"center\">\n           <Card>\n             <h2>No users found</h2>\n           </Card>\n         </div>\n     )\n    //  in case of no users found \n }\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n           <UserItem \n           key = {user.id} \n           id={user.id} \n           image={user.image} \n           name={user.name} \n           eventCount={user.events.length}\n           />\n      ))}\n    </ul>\n );\n};\n\nexport default UsersList;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\n//Backdrop signals to the user of a state change within the application and can be used for creating loaders, dialogs  etc..\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    // this function it expects to get on an on click prop on its own.\n    document.getElementById('backdrop-hook')\n    // backdrop hook will be place in the index.html file with the other hook\n  );\n};\n\nexport default Backdrop;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n// I can have 2 components in the same files.Modal component will use the ModalOverlay,this one will be seen on the screen\n\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        {/* with ${props... > so by using the modal, I can also add my classes to the modal  */}\n        <h2>{props.header}</h2>\n      </header>\n\n     <form onSubmit={ props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\n     {/* in case this form give the possibility to add content that is automatically wrapped in it */}\n     {/* if I render any buttons inside of that form it will not reload the page when I submit */}\n     {/* preventDefault: here stop the page to refresh when I close the Map */}\n      <div className={`modal__content ${props.contentClass}`}>\n        {props.children}\n      </div>\n\n      <footer className={`modal__footer ${props.footerClass}`}>\n        {props.footer}\n      </footer>\n\n    </form>\n  </div>\n);\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n//Portals provide a way to render children into a DOM node that exists outside the hierarchy of the DOM component. Added in index.html\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n        {/* React.Fragment for sibling top level elements  */}\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      {/* if there is a show prop it will render the backdrop and\n        on the backdrop, we can click and I will not trigger an on cancel method or function which I receive on */}\n       <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\">\n        <ModalOverlay {...props} />\n        {/* here it forward all the props get from outside to modal overlay */}\n        {/* {...props} is the spread operator that takes all the key-value pairs of the props object and spreads them as attributes in the modal overlay> to create a general modal  */}\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"Oups there is an error!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n//   const USERS = [\n//     {\n//         id:'u1', \n//         name:'Julia', \n//         image:'https://i.imgur.com/0p9zSZy.jpg', \n//         events:3,\n//     }\n// ];\n\n// return <UsersList items={USERS}/>;\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","// Here the identifiers :\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\n// function return validator configuration object, where everyobject has a type and a value\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\n//here I check if the input is not empty, as it's require\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n    //this is not the value that the user enter but the value to configure the validator, it will return a validtor description\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n  //in the \"val\" property I store the min lenght of the validator \"VALIDATOR_MINLENGTH\"\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n \nexport const validate = (value, validators) => {\n//this function is being called in the input.js in \"inputReduced\"\n//this function take the value that the user enter and go throught the array of validator (value, validators) to be check, if it's true then it follow the requirement down here:\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, {useReducer, useEffect}from 'react';\n//Use reducer allows you to manage state in a component and give a function that can be call which updates the state and re-renders the component, can manage more complex state than with use state\n// useEffect allows to run some logic when the dependencies changes.It adds the ability to perform side effects from a function component. It serves the same purpose as componentDidMount, componentDidUpdate, and componentWillUnmount in React classes.\n\nimport {validate} from '../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    //a userReducer received and current state that will be updated based on the action received wich is the 2nd arguments in the parantheses \n    switch (action.type) {\n      case 'CHANGE':\n        return {\n          ...state,\n            // with the spread operator it copies the old state that is in inputeReducer=(state) and copies all key-value pairs of that old object into this new object > \"...state\".Then I can override selected keys, selected properties..So I store here the old value only here\n          value: action.val,\n          //here i store the new value, in this \"val\" property\n          isValid: validate(action.val, action.validators)\n          //action.validators is a key,not use yet, it's coming from the changeHandler where the change event is dispatched, it received a props.\n        };\n        case 'TOUCH': {\n          //here I handle the touch case from \"touchHandler\" wrote below\n          return{\n          ...state,\n          //\"...state\" return the state where I copy everything that is there, to not loose the enter value THEN i update with isTouched to true\n          isTouched: true\n          // \"isTouched\" is also in the initial state,below, so by default set to \"false\"\n          }\n        }\n        default:\n        return state;\n    }\n  };\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        //I destructure here stored in constants, 1st the current state and 2nd the dispatch function to be call\n        //So I can dispatch actions to the reducer function which will run through the funtion and return a new state wich will update \"inputState\" and re-render the component in the end\n        value:props.initialValue || '',\n        //if the value is provided or if the value is not it's empty string\n        isTouched:false,\n        //initial state of \"isTouched\"\n        isValid:props.initialValid || false\n        //here initialy the input will be treated as false\n      });\n      \n    const {id, onInput} = props;\n    const {value, isValid} = inputState;\n\n    useEffect(() => {\n      onInput (id,value, isValid)\n    // here I destructure juste above in const {id...  and const {value...So no need to write \"props\"on this line\n    //whenever the function \"onInput\" change or the \"id\", or the \"value\", it will call the \"onInput\" props from the const, just above\n  },[id,value, isValid, onInput]);\n    // in {} > is the function to be executed. In the [] is the array of dependencies\n\n    const changeHandler = event => {\n        //\"event\" is an object we get automatically on the change event in \"onChange={changeHandler}\" from textarea\n        dispatch({ \n          type: 'CHANGE',\n          val: event.target.value,\n          validators :props.validators \n        });\n        //i want to dispatch to this reducer, the identified has to be the same that in \"case\" in the swith methode, so it's CHANGE, now\n        //\"target\" is the input element on which this event was triggered \n        //\"target.value\", value here is the value enter by the user\n        //the all sentence is updating the state\n        //validators is passed to the imput component wich is in the \"const NewEvent\" in component NewEvent.js\n      };\n\n      const touchHandler = () => {\n     dispatch({\n       type: 'TOUCH'\n        }); \n     //here I want to dispatch a new action\n    };\n    \n      const element =\n      //it's trigger everytime the user write something\n        props.element === 'input' ? (\n          <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            // The onblur event occurs when an object loses focus> when the cursor is far from the input filed.Onblur fires when a field loses focus, while onchange fires when that field's value changes. So it's when the user click in the input element then outside.So i need to show an error at this moment to say that user needs to write something inside.\n            // {touchHandler}> point to the touchHandler wrote above\n            value={inputState.value}\n          />\n        ) : (\n          <textarea\n          id={props.id}\n          rows={props.rows || 3}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n      />\n        );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched&&\n        'form-control--invalid'}`}>\n        {/* this class 'form-control--invalid' will be applied to this div if our input state is invalid, as it is initialy.It will be valid only after the user enter some characters*/}\n        {/* It will be valid only as well id \"isTouched\" is true */}\n       <label htmlFor={props.id}>{props.label}</label>\n        {/* htmlFor is the same \"for\" as the one in JS, for form */}\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n      {/* if the input is invalid, here we render an error message, that will be set outside, so I use props */}\n    </div>\n  );\n};\n\nexport default Input;\n\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n        // if the image is undefine\n      return;\n    }\n    const fileReader = new FileReader();\n    //here i generate an image preview URL\n    fileReader.onload = () => {\n        //fileReader helps to read files\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>HOLI PIC please!</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          Upload picture\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          //thoses state are input property, so here I go through all the input stored there using for in loop as it's an object\n          if(!state.inputs[inputId]){\n            continue;\n            //continue\n          }\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n            //formIsValid is the previous value that I combine with the new validity \"action.isValid\"\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n            // this update one of the field in the input \"state.inputs\"\n          },\n          isValid: formIsValid\n        };\n        case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n      default:\n        return state;\n    }\n  };\n\n  \nexport const useForm = (initialInputs, initialFormValidity) => {\n    //so it's set form outside when I use this Hook\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n    // added here so it's not hard coded\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData]; \n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token:null,\n  login: () => {},\n  logout: () => {}\n});\n\n ","import React, { useContext } from 'react';\n\n// If I setup two useState hooks & declare two functions to handle state changes when I invoke a function and re-render happens, a new instance of both of these functions will be created. The instance of the other function will also be created. So with several function  many instance will be created during each re-render and will causes performance issues like infinity loop. seCallback helps stop that. It will cache/memoized function we pass into it and stop a new instance to be created for the other function.\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/components/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './EventForm.css';\n\nconst NewEvent = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n    image: {\n      value: null,\n      isValid: false\n    }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const eventSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData =new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/events', 'POST', formData, {Authorization:'Bearer ' + auth.token});\n        history.push('/');\n      } catch (err) {}\n    };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"event-form\" onSubmit={eventSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"You will need an image here\"/>\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          Create a Holidrink\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewEvent;\n","import React, { useRef, useEffect } from 'react';\n//useRef is a hook, useRef returns a mutable ref object whose .current property is initialized to the passed argument (initialValue). The returned object will persist for the full lifetime of the component\n// By using the Hook useEffect, you tell React that your component needs to do something after render. React will remember the function you passed (we’ll refer to it as our “effect”), and call it later after performing the DOM updates. In this effect, we set the document title, but we could also perform data fetching or call some other imperative API.\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  //in this constant I point the div : <div ref ={mapRef}\n  \n  const { center, zoom } = props;\n  //I destructure here the : center, zoom, wrote in const map\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n    // This is a constructor function  now  available on the global window object in the end because I added the info google map and keys in index.html\n      center: center,\n      zoom:  zoom\n      //by using a prop I can control those tools from outside of the component\n      //no need to write : props.center etc.. as it's destructured and stored in the previous constance {center,zoom}\n    });\n  \n    new window.google.maps.Marker({ position:center, map: map });\n    //here I render the market, it's the localisation on the map of the place matching with the address so the red drop icone,this will show the marker in the center of the map\n  }, [center, zoom]);  \n\n  return (\n    // div that contain the google map in it\n    <div\n      ref={mapRef}\n      //this is where the connection is establish \n      className={`map ${props.className}`}\n      //here we can customize the map\n      style={props.style}\n      //can create the inline style of the map here if needed\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState,useContext } from 'react';\n\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Button from '../../shared/components/FormElements/Button'\nimport Card from '../../shared/components/UIElements/Card';\nimport Map from '../../shared/components/UIElements/Map';\nimport {AuthContext} from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\n\nimport './EventItem.css'\n\nconst EventItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const auth = useContext(AuthContext);\n   //it will controle the buttons delete and cancel\n  \n    const [showMap, setShowMap] = useState(false);\n    //showMap is initialy false so we don't show the model yet\n\n    const[showConfirmModal, setShowConfirmModal] = useState(false);\n\n    const openMapHandler = () => setShowMap(true);\n    //open the map\n    const closeMapHandler = () => setShowMap(false);\n    //close the map\n\n    const showDeleteWarningHandler = () => {\n      setShowConfirmModal(true);\n    };\n    \n    const cancelDeleteHandler = () => {\n      setShowConfirmModal(false);\n    };\n\n    const confirmDeleteHandler = async () => {\n      setShowConfirmModal(false);\n      try {\n        await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + `/events/${props.id}`,\n          'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n        );\n        props.onDelete(props.id);\n      } catch (err) {}\n    };\n  \n\n    return (\n    <React.Fragment>\n    {/* it won't  be rendered there, the portal both on the backdrop and modal overlay all to inject in a different place in the index.html file  */}\n    <ErrorModal error={error} onClear={clearError} />\n        <Modal\n          show={showMap}\n          onCancel={closeMapHandler}\n        //The cxl handler here is in the end of the function triggered in the backdrop in Modal.js when I click on {props.onCancel}\n          header={props.address}\n          contentClass=\"event-item__modal-content\"\n          footerClass=\"event-item__modal-actions\"\n          footer={<Button onClick={closeMapHandler}>Close</Button>}>\n            {/* button to close the modal */}\n          <div className=\"map-container\">\n            <Map center={props.coordinates} zoom={16}/>\n          </div>\n        </Modal>\n\n        <Modal \n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\" \n        footerClass=\"event-item__modal-actions\" \n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}> Cancel</Button>\n            <Button danger onClick={confirmDeleteHandler}> Delete</Button>\n          </React.Fragment>\n        }>\n          <p>Are you sure you want to delete your lovely Holidrink?</p>\n        </Modal>\n\n    <li className=\"event-item\">\n        <Card className=\"event-item__content\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"event-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title}/>\n        </div>\n        <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n        </div>\n        <div className=\"event-item__actions\">\n            <Button inverse onClick={openMapHandler}>View on map</Button>\n            {/* openMapHandler > open the map when click on it, reaching the function at the top: \"setShowMap(true)\"*/}\n            \n            {auth.userId === props.creatorId && (\n              <Button to={`/events/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                Delete\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default EventItem;","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport EventItem from './EventItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './EventList.css'\n\nconst EventList = props => {\n  if (props.items.lenght === 0){\n    // props to the array of events(items) here I have 0 of them\n      return (\n      <div className=\"event-list center\">\n        <Card>\n            <h2>You have no Holidrinks yet.Let's plan some!</h2>\n            <Button to=\"/events/new\">Plan a Holidrink</Button>\n        </Card>\n      </div>\n      );\n  }\n  return (\n  <ul className=\"event-list\">\n      {props.items.map(event =>( \n      <EventItem \n        key={event.id} \n        id={event.id} \n        image={event.image}\n        title={event.title}\n        description={event.description} \n        address={event.address} \n        creatorId={event.creator} \n        coordinates={event.location}\n        onDelete={props.onDeleteEvent}\n        />\n        ))}\n      {/* map to go through each event and load them here */}\n  </ul>\n  );\n};\n\nexport default EventList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport EventList from '../components/EventList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nconst UserEvents= () => {\n    const [loadedEvents, setLoadedEvents] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const userId= useParams().userId;\n    // use params return an object which has a dynamic segments set up in the route, so the > :userId from app.js, for example as properties\n   \n    useEffect(() => {\n        const fetchEvents = async () => {\n          try {\n            const responseData = await sendRequest(\n              `${process.env.REACT_APP_BACKEND_URL}/events/user/${userId}`\n            );\n            setLoadedEvents(responseData.events);\n          } catch (err) {}\n        };\n        fetchEvents();\n      }, [sendRequest, userId]);\n\n    const eventDeleteHandler = (deletedEventId) => {\n      setLoadedEvents(prevEvents => prevEvents.filter(event => event.id !== deletedEventId));\n    };\n\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedEvents && <EventList items={loadedEvents} onDeleteEvent={eventDeleteHandler}/>}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default UserEvents;","import React, { useEffect, useState, useContext } from 'react';\n// import { useParams } from 'react-router-dom';\n// to avoid infinit loop in \"setFormData\" because it will set a new form instead of updating, I use \"useEffect\" hook to wrap the call  setFormData inside\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/components/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './EventForm.css';\n\nconst UpdateEvent = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedEvent, setLoadedEvent] = useState();\n  const eventId = useParams().eventId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  //set like that later when we connect to the backend it will show a loadinf spinner while the user is waiting for the event to load\n  );\n\n\n  useEffect(() =>{\n    // so inside I put my function setFormData as useEffect will stop the loop\n    const fetchEvent = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/events/${eventId}`\n        );\n        setLoadedEvent(responseData.event);\n        setFormData(\n          {\n            title: {\n              value: responseData.event.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.event.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchEvent();\n  }, [sendRequest, eventId, setFormData]);\n\n  \n  const eventUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/events/${eventId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/' + auth.userId + '/events');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedEvent&& !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find the Holidrink!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedEvent && (\n        <form className=\"event-form\" onSubmit={eventUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedEvent.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedEvent.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            Modify your Holidrink\n          </Button>\n                  {/* if the form is not valid then the button is disabled */}\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateEvent;\n\n","import React, { useState, useContext } from 'react';\n//useState is use to manage some state, here to manage the switch mode\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport  ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/components/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {AuthContext} from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nimport './Auth.css';\n\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image:{\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\nconsole.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n      {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode &&\n           <ImageUpload \n           center id=\"image\" \n           onInput={inputHandler}\n            errorText=\"You will need an image here\"/>}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, {useContext} from 'react';\n//useContext creates a “context” at the top level and allows it to be “used” anywhere in the hierarchy.Avoid to update the prop at each child component so avoid time lost and errors\nimport { NavLink } from 'react-router-dom';\n// to analyse the URL in order to customize the link if we are on the page the link leads to\nimport {AuthContext} from '../../context/auth-context';\n\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n   const auth = useContext(AuthContext);\n    \nreturn <ul className=\"nav-links\">\n    {auth.isLoggedIn &&(\n    <li>\n        <NavLink to=\"/\" exact>Find Holidrinks</NavLink>\n    </li>\n    )}\n    {auth.isLoggedIn &&(\n    <li>\n        <NavLink to=\"/u1/events\">Modify my Holidrinks</NavLink>\n    </li>\n    )}\n    {auth.isLoggedIn &&(\n    <li>\n        <NavLink to=\"/events/new\">Create a Holidrinks</NavLink>\n    </li>\n    )}\n\n    {auth.isLoggedIn &&(\n    <li>\n        <NavLink onClick={auth.logout} to=\"/auth\">Logout</NavLink>\n    </li>\n    )}\n</ul>\n}; \n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';// transition effect library for burger menu for ex\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n// Use props.children on components that represent ‘generic boxes’ and that don’t know their children ahead of time, which is the case for a sidebar\nconst content = (\n    <CSSTransition in ={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\n    {/* timeout for the duration of the animation, seconds */}\n    {/* slide-in-left className is  used by the library CSSTransition in the css folder index.css*/}\n    {/* By default the child component is mounted immediately along with the parent Transition component.After the first enter transition the component will stay mounted, even on \"exited\", unless I also specify unmountOnExit. */}\n    <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\nreturn ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n// React DOM can do more than render a method.\n// I can use React DOM.createPortal to tell React which content to render, where.\n//  Here the place in the DOM where this content should be rendered when this component\n// is mounted and used.\n// I used the ID I just assigned there which is the drawer hook.  \n\nexport default SideDrawer;","import React, {useState} from 'react';\n// to manage the state where the drawer is opened or not i need to import >userState\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop'\n\nimport './MainNavigation.css';\n\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n    // I set drawer is open as a function to update that state, it's false by default so it's closed\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true);\n        // here i change the value from previous ligne, that was false by default to > true so it open the burger\n    };\n\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false);\n        // when this const is called it will close the menu burger\n    };\n\n    return( \n        <React.Fragment>\n        {/* with JS,we can have just one route Jsx element per component, so r.fragment wrapper allow this requirement of having one root element and then in there, we can several elements side by side/nested    */}\n         { drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\n         {/* if drawerIsOpen render the Backdrop, on click > close the burger menu */}\n         {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n            {/* means if this (drawerIsOpen) is true then execute the code in those curly bracket, using sign && insteaf of \"?\"and \":\" */}\n           <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n           <nav className=\"main-navigation__drawer-nav\">\n             <NavLinks />\n           </nav>\n         </SideDrawer>\n   \n            \n            <MainHeader>\n            <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\">HOLIDRINKS</Link>\n                </h1>\n\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n                    <span/>\n                    <span/>\n                    <span/>\n                </button>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks/>\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    )\n};\n\nexport default MainNavigation;","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\n\nimport Users from './users/pages/Users';\nimport NewEvent from './events/pages/NewEvent';\nimport UserEvents from './events/pages/UserEvents';\nimport UpdateEvent from './events/pages/UpdateEvent';\nimport Auth from './users/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport {AuthContext} from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => { \n\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token){\n    routes =(\n      <Switch>\n\n       <Route path=\"/\" exact>\n          <Users/> \n        </Route>\n\n        <Route path=\"/:userId/events\" exact>\n        <UserEvents/> \n        </Route>\n\n        <Route path=\"/events/new\" exact>\n          <NewEvent/> \n        </Route>\n\n        <Route path=\"/events/:eventId\">\n        {/* this has to be place after event/new, the order matters here,as it need to enter in event/new before. */}\n          <UpdateEvent /> \n      </Route>\n          <Redirect to=\"/\" /> {/*If what is incorrect after this slash then it will redirect to / nothing after */}\n\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/auth\">\n          <Auth/> \n        </Route>\n        <Redirect to=\"/auth\" /> \n\n      </Switch>\n      /* stop the render the next path after it render the one written in the URL */\n   );\n  }\n\n  return (\n    <AuthContext.Provider \n    value={{\n      isLoggedIn: !!token, \n      token:token,\n      userId:userId,\n      login: login, \n      logout:logout}}>\n      <Router>\n      {/* <Title/> */}\n          <MainNavigation/>{/* before the switch as I want to show this nav bar doesn't matter which URL is called for other componants */}\n          <main> {routes}</main>  {/* main component placed here to get some padding between nav bar and event */}\n        </Router>\n      </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}